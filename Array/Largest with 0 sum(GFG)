class Solution {
    int maxLength(int arr[]) {
        int n = arr.length;
        HashMap<Integer, Integer> map = new HashMap<>();
        int sum = 0, maxLen = 0;

        for (int i = 0; i < n; i++) {
            sum += arr[i];

            if (sum == 0) {
                // Subarray from 0 to i has sum 0
                maxLen = i + 1;
            } 
            else if (map.containsKey(sum)) {
                // Subarray between previous index and current index has sum 0
                maxLen = Math.max(maxLen, i - map.get(sum));
            } 
            else {
                map.put(sum, i);
            }
        }
        return maxLen;
    }
}
