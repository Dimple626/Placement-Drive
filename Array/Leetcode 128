import java.util.*;

class Solution {
    public int longestConsecutive(int[] nums) {
        int longestLength = 0;
        Map<Integer, Boolean> map = new HashMap<>();

        for (int num : nums) {
            map.put(num, false); // Mark all numbers unvisited initially
        }

        for (int num : nums) {
            if (map.get(num)) continue; // Skip already visited numbers

            map.put(num, true); // Mark current number as visited
            int currentLength = 1;

            int nextNum = num + 1;
            while (map.containsKey(nextNum) && !map.get(nextNum)) {
                map.put(nextNum, true);
                currentLength++;
                nextNum++;
            }

            int prevNum = num - 1;
            while (map.containsKey(prevNum) && !map.get(prevNum)) {
                map.put(prevNum, true); // âœ… Corrected from nextNum to prevNum
                currentLength++;
                prevNum--;
            }

            longestLength = Math.max(longestLength, currentLength);
        }

        return longestLength;
    }
}
